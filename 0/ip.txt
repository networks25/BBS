## What is an IPv4 Address?

    An IP (Internet Protocol) address is like a mailing address for computers. Every device connected to a network (like the internet) needs an address so data knows where to go.

    IPv4 addresses are written as four numbers (each from 0 to 255) separated by dots. For example:
    192.168.1.10
    192.168.1.10

    Each of these four numbers is called an octet because it represents 8 bits in binary.

## IPv4 Addresses Often Written in “Dotted Decimal” Format.

The format X.X.X.X (where X is from 0 to 255) is easier for humans to read than long binary strings.

Under the hood, each IP address is really a 32-bit binary number. Breaking it into four 8-bit chunks makes it more manageable.

## It Helpful to Represent IP Addresses as Binary

In everyday use, people rarely deal with binary notation directly. However, understanding the binary representation does help students grasp:

Subnetting: how an IP network is divided into sub-networks.
Masking: how certain bits indicate the “network” portion vs. the “host” portion of the address.

    Example:
    192.168.1.10 in binary is:

    11000000.10101000.00000001.00001010

Seeing it in binary helps you visualize which bits belong to the network part and which bits belong to the host part.

## Subnet Mask Basics

A subnet mask is used to separate the network address from the host address. It’s also written in dotted-decimal form, e.g., 255.255.255.0.

In binary, 255.255.255.0 looks like:

    11111111.11111111.11111111.00000000

The 1 bits indicate the network portion, and the 0 bits indicate the host portion.

Understanding the concept of a subnet mask is simpler if you think of it in binary. You can literally see which bits are network bits and which are host bits.

Binary mask                          Dotted-decimal   CIDR  Total addresses  Usable hosts*
11111111.11111111.11111111.11111111  255.255.255.255  /32   1                 1 (single IP)
11111111.11111111.11111111.11111110  255.255.255.254  /31   2                 2 (ptp) / 0 (legacy)
11111111.11111111.11111111.11111100  255.255.255.252  /30   4                 2
11111111.11111111.11111111.11111000  255.255.255.248  /29   8                 6
11111111.11111111.11111111.11110000  255.255.255.240  /28   16                14
11111111.11111111.11111111.11100000  255.255.255.224  /27   32                30
11111111.11111111.11111111.11000000  255.255.255.192  /26   64                62
11111111.11111111.11111111.10000000  255.255.255.128  /25   128               126
11111111.11111111.11111111.00000000  255.255.255.0    /24   256               254


/24 means that first 24 bits are network, last 8 bits are the host.
that forces the network to start where the host bits = 0...0.

* /24 networks must start at .0
* /30 networks (4 IPs in each) must start at multiplies of 4: .0, .4, .8, .12, ...
* /29 networks (8 IPs in each) must start at multiplies of 8: .0, .8, .16, .24, ...

Each subnet must start at a multiple of its block size (number of total addresses in that subnet).

* /27 networks must start at .0, .32, .64, .96.... .224
* /26 networks must start at .0, .64, .128, .192
* /25 networks must start at .0, .128

So, for subnet /X the block size = 2^host bits.


----------

Binary mask                          Dotted-decimal   CIDR Total addresses   Usable hosts*
11111111.11111111.11111111.00000000  255.255.255.0    /24  256                254
11111111.11111111.11111110.00000000  255.255.254.0    /23  512                510
11111111.11111111.11111100.00000000  255.255.252.0    /22  1,024              1,022
11111111.11111111.11111000.00000000  255.255.248.0    /21  2,048              2,046
11111111.11111111.11110000.00000000  255.255.240.0    /20  4,096              4,094
11111111.11111111.11100000.00000000  255.255.224.0    /19  8,192              8,190
11111111.11111111.11000000.00000000  255.255.192.0    /18  16,384             16,382
11111111.11111111.10000000.00000000  255.255.128.0    /17  32,768             32,766
11111111.11111111.00000000.00000000  255.255.0.0      /16  65,536             65,534

-----------

Binary mask                          Dotted-decimal   CIDR  Total addresses  Usable hosts*
11111111.11111111.00000000.00000000  255.255.0.0      /16  65,536             65,534
11111111.11111110.00000000.00000000  255.254.0.0      /15  131,072            131,070
11111111.11111100.00000000.00000000  255.252.0.0      /14  262,144            262,142
11111111.11111000.00000000.00000000  255.248.0.0      /13  524,288            524,286
11111111.11110000.00000000.00000000  255.240.0.0      /12  1,048,576          1,048,574
11111111.11100000.00000000.00000000  255.224.0.0      /11  2,097,152          2,097,150
11111111.11000000.00000000.00000000  255.192.0.0      /10  4,194,304          4,194,302
11111111.10000000.00000000.00000000  255.128.0.0      /9  8,388,608           8,388,606
11111111.00000000.00000000.00000000  255.0.0.0        /8  16,777,216          16,777,214

Binary mask                          Dotted-decimal   CIDR  Total addresses  Usable hosts*
11111111.00000000.00000000.00000000  255.0.0.0        /8    16,777,216        16,777,214
11111110.00000000.00000000.00000000  254.0.0.0        /7    33,554,432        33,554,430
11111100.00000000.00000000.00000000  252.0.0.0        /6    67,108,864        67,108,862
11111000.00000000.00000000.00000000  248.0.0.0        /5    134,217,728       134,217,726
11110000.00000000.00000000.00000000  240.0.0.0        /4    268,435,456       268,435,454
11100000.00000000.00000000.00000000  224.0.0.0        /3    536,870,912       536,870,910
11000000.00000000.00000000.00000000  192.0.0.0        /2    1,073,741,824     1,073,741,822
10000000.00000000.00000000.00000000  128.0.0.0        /1    2,147,483,648     2,147,483,646
00000000.00000000.00000000.00000000  0.0.0.0          /0    4,294,967,296     4,294,967,294

##. Classful Networking: A, B, C

Historically, IPv4 addresses were divided into classes based on the first few bits of the address. While modern networks mostly use Classless Inter-Domain Routing (CIDR), it still helps to know the old Class A, B, and C groupings:

    Class A
        First octet range: 1–126 (in dotted decimal)
        Default Subnet Mask: 255.0.0.0
        In binary, the first bit is 0.
        Designed for very large networks (lots of hosts).

    Class B
        First octet range: 128–191
        Default Subnet Mask: 255.255.0.0
        In binary, the first two bits are 10.
        Designed for medium-sized networks.

    Class C
        First octet range: 192–223
        Default Subnet Mask: 255.255.255.0
        In binary, the first three bits are 110.
        Designed for smaller networks.

(Note: The ranges above exclude certain addresses like 127.x.x.x for loopback, and the Class A range often starts at 1 because 0.x.x.x was reserved in older specifications. In modern usage, we don’t strictly rely on classes. Instead, we look at CIDR notation, like /8, /16, /24, etc.)

## Why Classful Networking Is Less Common Now

Classful networking has largely been replaced by CIDR (Classless Inter-Domain Routing) because:

* It is more efficient with address space.
* It allows for more flexible subnetting (you’re not restricted to “Class A”, “Class B”, or “Class C” boundaries).

* Even though classful networking is considered outdated, learning about it provides a historical context and helps in understanding default subnet masks.


# Why is 255.255.255.0 the same as /24?

## IPv4 Has 32 Bits Total

An IPv4 address is 32 bits long. This is why you sometimes see “/32” used— that means all 32 bits are considered part of the network portion (which leaves 0 bits for hosts).

## “/24” Means 24 Network Bits

“/24” (CIDR notation) means 24 of those 32 bits are the “network” portion of the address.

The remaining (32 − 24) = 8 bits are for the “host” portion within that network.

## 24 Bits Set to 1 in Binary = 255.255.255.0

Each “octet” (the part between the dots) is 8 bits.
Writing out 24 bits as all 1s:

11111111.11111111.11111111.00000000

11111111.11111111.11111111.00000000

Converting each 8-bit part (octet) from binary to decimal:
        11111111 = 255
        11111111 = 255
        11111111 = 255
        00000000 = 0

So in dotted decimal form, 24 bits of 1 = 255.255.255.0.

Hence, 255.255.255.0 is /24.
2. Why 32 bits, and where does that number come from?

IPv4 addresses are 4 octets (4 × 8 bits = 32 bits). This is a historical design of the Internet Protocol version 4. Each IPv4 address must fit into 32 bits.
3. Are all 127.x.x.x addresses for loopback?

    Yes, the entire range 127.0.0.0 to 127.255.255.255 (which is 127.0.0.0/8) is reserved for loopback testing.
    In practice, you see 127.0.0.1 used most often as the standard “localhost” address, but any address starting with 127. is loopback on most systems.

4. How does representing IP addresses (and masks) in binary help with subnetting?
a. Subnetting Is About Splitting the 32 Bits

When you subnet, you’re effectively deciding how many bits of the 32 are dedicated to the network (net) portion and how many bits are dedicated to the host portion.
b. Example: 255.255.255.252 (which is /30)

    In binary, 255.255.255.252 looks like:
    11111111.11111111.11111111.11111100
    11111111.11111111.11111111.11111100
    That means 30 bits (the 1s) are reserved for the network, and 2 bits (the 0s) are for hosts in that subnet.

c. Why Does This Matter?

    If 2 bits are left for hosts, that means you have 22=422=4 addresses in that subnet:
        Network address (all host bits 0)
        2 usable host addresses (where the 2 bits can vary)
        Broadcast address (all host bits 1)
    Concretely:
        Network address: 192.168.1.0 (binary host part: 00)
        First host: 192.168.1.1 (binary host part: 01)
        Second host: 192.168.1.2 (binary host part: 10)
        Broadcast: 192.168.1.3 (binary host part: 11)

So if your addresses are 192.168.1.1 and 192.168.1.2 with a netmask of /30 (255.255.255.252), they both fit into the 192.168.1.0/30 subnet (network = .0, broadcast = .3). That leaves you exactly two usable IPs: .1 and .2.

Seeing the bits helps you visualize that you have only 2 bits for hosts, which is how we know the subnet “increments” in steps of 4 in that last octet (0, 4, 8, 12, etc.).
5. Do masks have to be /8, /16, /24 only?

    No, absolutely not. You can have almost any prefix length from /0 to /32.
    /8, /16, and /24 were the “default” (classful) masks for old Class A, Class B, and Class C networks:
        Class A: 255.0.0.0 -> /8
        Class B: 255.255.0.0 -> /16
        Class C: 255.255.255.0 -> /24

Modern networks are almost entirely classless, meaning we use CIDR (Classless Inter-Domain Routing). You might see /19, /20, /21, /22, /27, /30, etc., depending on how many hosts you need in a subnet.

a. Example: /19

    If you see /19, that means the first 19 bits are network bits.
    How many bits are left for hosts? 32 − 19 = 13 bits for hosts.
    That translates to 213=8192213=8192 addresses in that subnet (minus 2 if you’re using classical network/broadcast addresses).

b. Example: /17

    /17 means 17 bits are network, 15 bits are host.
    215=32768215=32768 addresses in that subnet.

Putting It All Together

    Total Bits = 32: That’s non-negotiable for IPv4.
    Slash Notation (/xx): Tells you how many of those 32 bits are reserved for the network.
    Subnet Mask: Is just a visual way (in dotted-decimal) to show which bits are 1 (network) and which bits are 0 (host).
    Binary Representation: Helps you see exactly where the “divide” between network bits and host bits occurs. This is crucial for understanding how many subnets you get and how many hosts fit into each subnet.

    For small subnets (like point-to-point links), you’ll often see masks like /30, /31, or /29.
    For larger networks, you’ll see something like /22 or /20.
    No need to be restricted to /8, /16, or /24. Those are just the “traditional” classful boundaries.

Final Thoughts

    Understanding the binary representation is powerful because subnetting is fundamentally about bit boundaries.
    Once you “see” that you have X bits for network and Y bits for host, it becomes straightforward to calculate how many addresses per subnet and how they’re spaced.


The first and last IP addresses in a subnet aren’t used because they are reserved for special purposes: the network address and the broadcast address. Let me explain both:

1. Network Address (First IP)

    The network address is the first IP in a subnet, where all the host bits in the IP address are set to 0.
    This address identifies the subnet itself—it doesn’t represent a device or host.

Example:

For the subnet 192.168.1.0/24:

    Binary: 192.168.1.0 is represented as:

    11000000.10101000.00000001.00000000

    (all host bits = 0).
    Purpose: It’s used by routers and network devices to reference or route to the entire subnet (e.g., “192.168.1.0 network”).

2. Broadcast Address (Last IP)

    The broadcast address is the last IP in a subnet, where all the host bits in the IP address are set to 1.
    This address is used to send a message to all hosts in the subnet simultaneously.

Example:

For the subnet 192.168.1.0/24:

    Binary: 192.168.1.255 is represented as:

    11000000.10101000.00000001.11111111

    (all host bits = 1).
    Purpose: If a device sends a message to 192.168.1.255, it will be received by all devices in the subnet.

3. Why Can’t These Be Used for Hosts?

    Hosts (computers, devices) need unique IP addresses in the subnet.
    If you assigned the network address or broadcast address to a device, it would cause confusion:
        Using the network address: Routers wouldn’t know if a packet was for the entire network or just one device.
        Using the broadcast address: The device would receive (and possibly respond to) all broadcast traffic.

4. How Does This Affect Usable IPs?

For any given subnet, the number of usable host addresses is:
2^n−2

Where n is the number of bits for the host portion (i.e., 32 - prefix length).

Example 1: /24 (Subnet Mask = 255.255.255.0)

    Host bits: 32 − 24 = 8.
    Total IPs: 2^8=256.
    Usable IPs:
    256−2 = 2^8 — 2 = 254 (from 192.168.1.1 to 192.168.1.254).

Example 2: /30 (Subnet Mask = 255.255.255.252)

    Host bits: 32 − 30 = 2.
    Total IPs: 22=422=4.
    Usable IPs: 4−2=24−2=2 (used for point-to-point links, e.g., between two routers).

## What About /31 Subnets?

In special cases (like point-to-point links), /31 subnets can use all addresses because there are only two devices. There’s no need for a broadcast address in such a scenario, so both IPs are usable.
Summary

    First IP (network address): Reserved to identify the subnet.
    Last IP (broadcast address): Reserved to send messages to all devices in the subnet.
    Usable IPs: The remaining addresses in between, which can be assigned to hosts.


# IP packet

+-----------------------------+
| IP Header (20–60 bytes)     |
+-----------------------------+
| Payload (TCP/UDP/ICMP/etc.) |
+-----------------------------+


IP Header (20 bytes minimum, 60 bytes maximum)
Contains information like:

* Version (IPv4 = 4)

* IHL (Internet Header Length)

* DSCP/ECN (quality of service bits)

* Total Length (entire packet size, header + data)

* Identification, Flags, Fragment Offset (used for fragmentation/reassembly)

* TTL (Time to Live) (hop limit)

* Protocol (tells which higher-level protocol is inside: TCP = 6, UDP = 17, ICMP = 1, etc.)

* Header Checksum

* Source IP Address

* Destination IP Address

## Header checksum

The IPv4 header has a Header Checksum field.

It covers only the header, not the payload.

Purpose: make sure routers and receivers don’t misinterpret addresses, TTL, or protocol info due to a bit error.

If checksum fails the whole packet is dropped.

There is no retransmission at IP layer.

## TTL
traceroute.

TTL prevents infinite loops.
In Linux it is 64. In Windows: 128.

```
cat /proc/sys/net/ipv4/ip_default_ttl
```



